@model IEnumerable<MandalaApp.Models.MandalaHome>

@{
    ViewData["Title"] = "MANDALA - HOME";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
</head>
<style>
    /* Custom style cho hàng được chọn */
    #fileTable tr.table-active {
        background-color: #e2e2e2 !important;
    }

    .table-responsive {
        min-height: 400px;
    }

    #fileTable {
        table-layout: fixed;
        width: 100%;
    }

        #fileTable thead th {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
            /* Chỉnh độ rộng cột */
            #fileTable thead th:nth-child(1) {
                width: 150px;
            }

            #fileTable thead th:nth-child(2) {
                width: 200px;
            }

            #fileTable thead th:nth-child(3) {
                width: 150px;
            }

    .my-dropdown-list {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        max-height: 300px;
        overflow-y: auto;
        background: #fff;
        border: 1px solid #ccc;
        border-top: none;
        border-radius: 0 0 5px 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.15);
        display: none;
        z-index: 9999;
    }

        .my-dropdown-list.show {
            display: block;
        }

        .my-dropdown-list a {
            display: block;
            padding: 8px 12px;
            color: #333;
            text-decoration: none;
        }

            .my-dropdown-list a:hover {
                background-color: #f8f9fa;
            }
</style>

<div id="content-wrapper" class="d-flex flex-column">
    <!-- Main Content -->
    <div id="content">
        <nav class="navbar navbar-expand navbar-light bg-white topbar static-top shadow px-3">
            <!-- Search -->
            <input type="text" id="search" placeholder="Tìm kiếm..." onkeyup="searchFiles()" class="form-control">
            <!-- User Dropdown -->
            <div class="nav-item dropdown no-arrow ml-auto">
                <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="mr-2 d-none d-lg-inline text-gray-600 small">@User.FindFirst("FullName")?.Value</span>
                    <img class="img-profile rounded-circle" src="@ViewBag.Avatar" style="width: 42px;height: 42px;">
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                    <a class="dropdown-item" href="/Profile/Profile">
                        <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i> Profile
                    </a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i> Logout
                    </a>
                </div>
            </div>
        </nav>

        <div class="container-fluid">
            <!-- Content Row -->
            <div class="row mt-4">
                <!-- Mandala Chart (cột bên trái) -->
                <div class="col-xl-8 col-lg-7">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Mandala Chart</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive mt-3">
                                <table id="fileTable" class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th onclick="sortTable(0)">Tên</th>
                                            <th onclick="sortTable(1)">Sửa đổi lần cuối</th>
                                            <th>Người sửa</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var mandala in Model)
                                        {
                                            <tr data-id="@mandala.MandalaID" onclick="selectFile(this)" ondblclick="navigateToChart(this)">
                                                <td>@mandala.NameMandala</td>
                                                <td>
                                                    @(
                                                        mandala.ModifiedDate.HasValue
                                                        ? mandala.ModifiedDate.Value.ToString("dd 'Tháng' M, yyyy")
                                                        : "Chưa xác định"
                                                        )
                                                </td>
                                                <td>
                                                    <div style="display: flex; justify-content: space-between; align-items: center;">
                                                        <span>@mandala.NameUser</span>
                                                        <div class="dropdown">
                                                            <button class="btn btn-link" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <i class="fas fa-ellipsis-v"></i>
                                                            </button>
                                                            <div class="dropdown-menu">
                                                                <a class="dropdown-item" href="#" onclick="openShareModal(event, '@mandala.MandalaID')">Share</a>
                                                                <a class="dropdown-item text-danger" href="#" onclick="deleteFile(event, '@mandala.MandalaID')">Delete</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Khung xem chi tiết (cột bên phải) -->
                <div class="col-xl-4 col-lg-5">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Chi tiết</h6>
                        </div>
                        <div class="card-body" id="detailContainer">
                            <p>Chọn một file từ Mandala Chart để xem chi tiết.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Share Mandala (tìm kiếm user) -->
<div class="modal fade" id="shareModal" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="shareModalLabel">Chia sẻ Mandala</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Ô tìm kiếm User theo Name với dropdown kết quả -->
                <div class="my-dropdown" style="position: relative;">
                    <input type="text" id="userSearch" class="form-control" placeholder="Tìm kiếm User..." onkeyup="searchUser()" />
                    <div id="userDropdownSearch" class="my-dropdown-list">
                        <!-- Kết quả tìm kiếm sẽ được JS chèn vào đây -->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Share Confirm (xác nhận chia sẻ & chọn quyền) -->
<div class="modal fade" id="shareConfirmModal" tabindex="-1" role="dialog" aria-labelledby="shareConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận chia sẻ Mandala</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="shareConfirmContent">
                    <div class="d-flex align-items-center mb-3">
                        <img id="confirmUserAvatar" src="" class="rounded-circle mr-2" width="40" height="40" alt="Avatar" />
                        <div>
                            <div id="confirmUserName" style="font-weight: 500;"></div>
                            <div id="confirmUserEmail" style="font-size: 0.85rem; color: #666;"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="permissionSelect">Chọn quyền chia sẻ</label>
                        <select id="permissionSelect" class="form-control">
                            <!-- Giữ nguyên value cho option để đồng nhất với chuyển đổi ở phía JS -->
                            <option value="restricted">Hạn chế</option>
                            <option value="read">Chỉ xem</option>
                            <option value="write">Sửa đổi</option>
                        </select>
                    </div>
                    <p class="text-muted" style="font-size: 0.9rem;">
                        Chọn "Chỉ Hạn chế" nếu bạn muốn hủy chia sẻ.
                    </p>
                </div>
            </div>
            <div class="modal-footer">
                <!-- Thêm onclick gọi confirmShare() không cần truyền parameter vì sẽ sử dụng currentShareUser.id -->
                <button id="confirmShareBtn" type="button" class="btn btn-primary" onclick="confirmShare()">Xác nhận</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>

<!-- Logout Modal -->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logoutModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                Select "Logout" below if you are ready to end your current session.
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <form method="post" action="@Url.Action("Logout", "Account")">
                    <button class="btn btn-primary" type="submit">Logout</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var currentMandalaId = null;
    var currentShareUser = null; // Đối tượng user được chọn từ danh sách
    // currentShareInfo: nếu null nghĩa là chưa chia sẻ (mặc định là "Hạn chế")
    var currentShareInfo = null;

    function searchFiles() {
        let input = document.getElementById("search").value.toLowerCase();
        let rows = document.querySelectorAll("#fileTable tbody tr");
        rows.forEach(row => {
            let name = row.cells[0].textContent.toLowerCase();
            row.style.display = name.includes(input) ? "" : "none";
        });
    }

    function parseDate(dateStr) {
        let parts = dateStr.match(/(\d{1,2}) Tháng (\d{1,2}), (\d{4})/);
        return parts ? new Date(parts[3], parts[2] - 1, parts[1]) : new Date(0);
    }

    let sortDirections = [true, true];
    function sortTable(columnIndex) {
        let table = document.getElementById("fileTable");
        let tbody = table.querySelector("tbody");
        let rows = Array.from(tbody.querySelectorAll("tr"));
        let ascending = sortDirections[columnIndex];
        let sortedRows = rows.sort((a, b) => {
            let valA = a.cells[columnIndex].textContent;
            let valB = b.cells[columnIndex].textContent;
            return (columnIndex === 1
                ? (parseDate(valA) - parseDate(valB))
                : valA.localeCompare(valB, 'vi', { numeric: true })
            ) * (ascending ? 1 : -1);
        });
        tbody.innerHTML = "";
        sortedRows.forEach(row => tbody.appendChild(row));
        sortDirections[columnIndex] = !ascending;
    }

    function selectFile(row) {
        // Bỏ class "table-active" khỏi tất cả các dòng và thêm vào dòng đang chọn
        document.querySelectorAll("#fileTable tbody tr").forEach(r => r.classList.remove("table-active"));
        row.classList.add("table-active");

        let cells = row.getElementsByTagName("td");
        let mandalaId = row.getAttribute("data-id"); // Đảm bảo tr có data-id

        // Hiển thị thông tin chi tiết và thêm canvas chart
        document.getElementById("detailContainer").innerHTML =
            "<h5>" + cells[0].textContent + "</h5>" +
            "<p><strong>Sửa đổi:</strong> " + cells[1].textContent + "</p>" +
            "<p><strong>Người sửa:</strong> " + (cells[2].querySelector("span")?.textContent || "") + "</p>" +
            '<canvas id="mandalaStatusChart" width="300" height="300"></canvas>';

        // Sau khi canvas đã tồn tại, thực hiện fetch để vẽ biểu đồ
        fetch(`/Index/GetMandalaStatusChart?mandalaId=${mandalaId}`)
            .then(res => res.json())
            .then(data => {
                const ctx = document.getElementById('mandalaStatusChart').getContext('2d');
                new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Hoàn thành', 'Chưa hoàn thành'],
                        datasets: [{
                            data: [data.completed, data.incomplete],
                            backgroundColor: ['#28a745', '#dc3545']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            })
            .catch(err => {
                console.error('Lỗi khi tải dữ liệu biểu đồ:', err);
            });
    }


    function navigateToChart(row) {
        let id = row.getAttribute("data-id");
        window.location.href = '@Url.Action("Chart", "Chart")' + '?id=' + id;
    }

    function openShareModal(e, mandalaId) {
        e.stopPropagation();
        currentMandalaId = mandalaId;
        document.getElementById("userSearch").value = "";
        document.getElementById("userDropdownSearch").innerHTML = "";
        document.getElementById("userDropdownSearch").classList.remove("show");
        $("#shareModal").modal("show");
    }

    function searchUser() {
        const query = document.getElementById("userSearch").value.trim();
        const dropdown = document.getElementById("userDropdownSearch");
        if (!query) {
            dropdown.innerHTML = "";
            dropdown.classList.remove("show");
            return;
        }
        fetch('@Url.Action("SearchUsers", "Index")?query=' + encodeURIComponent(query)+ '&mandalaid=' + currentMandalaId)
            .then(response => response.json())
            .then(data => {
                dropdown.innerHTML = "";
                if (!data || data.length === 0) {
                    dropdown.classList.remove("show");
                    return;
                }
                data.forEach(user => {
                    const a = document.createElement("a");
                    a.href = "#";
                    a.className = "dropdown-item d-flex align-items-center";
                    a.innerHTML = `
                        <img src="${user.avatar || '/img/default-avatar.png'}"
                             class="rounded-circle mr-2"
                             width="40" height="40"
                             alt="Avatar" />
                        <div>
                            <div style="font-weight: 500;">${user.name}</div>
                            <div style="font-size: 0.85rem; color: #666;">${user.email}</div>
                        </div>
                    `;
                    a.onclick = (e) => {
                        e.preventDefault();
                        openShareConfirmModal(user);
                    };
                    dropdown.appendChild(a);
                });
                dropdown.classList.add("show");
            })
            .catch(err => {
                console.error(err);
                dropdown.classList.remove("show");
            });
    }

    function openShareConfirmModal(user) {
        currentShareUser = user;
        // Gọi API SearchShare để lấy thông tin share hiện có của currentMandalaId với user được chọn.
        // Giả sử user.id chứa giá trị định danh của user được chọn.
        fetch('@Url.Action("SearchShare", "Index")' + '?mandalaid=' + currentMandalaId + '&usershare=' + user.id)
            .then(response => response.json())
            .then(data => {
                currentShareInfo = data;
                // Cập nhật giao diện modal xác nhận chia sẻ với thông tin user:
                document.getElementById("confirmUserAvatar").src = user.avatar || '/img/default-avatar.png';
                document.getElementById("confirmUserName").textContent = user.name;
                document.getElementById("confirmUserEmail").textContent = user.email;

                // Chuyển đổi giá trị permission lấy từ SQL Server thành định dạng của select
                var permissionValue = "restricted"; // mặc định
                if (currentShareInfo && currentShareInfo.permission) {
                    permissionValue = currentShareInfo.permission === "Hạn chế" ? "restricted" : currentShareInfo.permission;
                }
                document.getElementById("permissionSelect").value = permissionValue;

                $("#shareModal").modal("hide");
                $("#shareConfirmModal").modal("show");
            })
            .catch(err => {
                console.error(err);
                currentShareInfo = null;
                document.getElementById("confirmUserAvatar").src = user.avatar || '/img/default-avatar.png';
                document.getElementById("confirmUserName").textContent = user.name;
                document.getElementById("confirmUserEmail").textContent = user.email;
                document.getElementById("permissionSelect").value = "restricted";
                $("#shareModal").modal("hide");
                $("#shareConfirmModal").modal("show");
            });
    }

    // Khi ấn nút "Xác nhận" trong modal Share Confirm, gọi API cập nhật thông tin chia sẻ vào SQL Server.
    function confirmShare() {
        let sharedUserId = currentShareUser.id; // Giả sử đối tượng user có thuộc tính id
        const permission = document.getElementById("permissionSelect").value;
        if (!currentMandalaId) return;
        if (permission === "restricted") {
            // Nếu chọn "restricted" -> hủy chia sẻ (RemoveShare)
            fetch('@Url.Action("RemoveShare", "Index")' + '?mandalaId=' + currentMandalaId + '&sharedUserId=' + sharedUserId, {
                method: 'POST'
            })
            .then(response => {
                if (response.ok) {
                    alert("Đã hủy chia sẻ thành công!");
                    $("#shareConfirmModal").modal("hide");
                } else {
                    alert("Có lỗi xảy ra khi hủy chia sẻ!");
                }
            })
            .catch(err => {
                console.error(err);
                alert("Không thể hủy chia sẻ!");
            });
        } else {
            // Cập nhật hoặc tạo mới chia sẻ (Share)
            fetch('@Url.Action("Share", "Index")', {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    mandalaId: currentMandalaId,
                    sharedUserId: sharedUserId,
                    permission: permission
                })
            })
            .then(response => {
                if (response.ok) {
                    alert("Cập nhật chia sẻ thành công!");
                    $("#shareConfirmModal").modal("hide");
                } else {
                    response.text().then(text => alert("Có lỗi xảy ra khi cập nhật: " + text));
                }
            })
            .catch(error => {
                console.error("Lỗi cập nhật:", error);
                alert("Không thể cập nhật chia sẻ!");
            });
        }
    }

    function deleteFile(e, mandalaId) {
        e.stopPropagation();
        if (!confirm("Bạn có chắc chắn muốn xóa Mandala ID = " + mandalaId + "?")) return;
        fetch('@Url.Action("Delete", "Index")' + '?mandalaId=' + mandalaId, { method: 'POST' })
            .then(response => {
                if (response.ok) {
                    alert("Đã xóa thành công!");
                    location.reload();
                } else {
                    alert("Có lỗi xảy ra khi xóa!");
                }
            })
            .catch(err => {
                console.error(err);
                alert("Không thể xóa!");
            });
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
