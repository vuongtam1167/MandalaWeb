@model MandalaApp.Models.User

@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Reset & base style */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
        background: #f5f7fa;
    }
    /* Profile card */
    .profile-card {
        max-width: 400px;
        background-color: #fff;
        border-radius: 10px;
        padding: 30px;
        margin: 40px auto;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    .profile-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .profile-avatar {
        width: 90px;
        height: 90px;
        border-radius: 50%;
        background-size: cover;
        background-position: center;
        margin-right: 20px;
        cursor: default;
        transition: transform 0.3s;
    }

        .profile-avatar:hover {
            transform: scale(1.05);
        }

    .profile-info h2 {
        font-size: 26px;
        color: #333;
    }

    .profile-details {
        margin-top: 20px;
    }

    .detail-row {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

    .label {
        flex-basis: 120px;
        font-weight: bold;
        color: #555;
    }

    .value {
        flex: 1;
    }

    .profile-details input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
        color: #333;
    }

        .profile-details input:disabled {
            background-color: #f9f9f9;
            color: #777;
        }

    .btn-edit, .btn-submit {
        display: block;
        width: 100%;
        padding: 12px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s;
        margin-top: 20px;
    }

    .btn-edit {
        background-color: #3c4b64;
        color: #fff;
    }

        .btn-edit:hover {
            background-color: #2c3b52;
        }

    .btn-submit {
        background-color: #28a745;
        color: #fff;
        display: none;
    }

        .btn-submit:hover {
            background-color: #218838;
        }

    .btn-change-password {
        margin-left: 10px;
        padding: 6px 12px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        transition: background 0.3s;
        display: none;
    }

        .btn-change-password:hover {
            background-color: #0069d9;
        }
    /* Modal đổi mật khẩu */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.6);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 999;
    }

    .modal-content {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        width: 320px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        position: relative;
    }

    .modal-close {
        position: absolute;
        top: 8px;
        right: 8px;
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: #888;
    }

    .modal-content .detail-row {
        flex-direction: column;
        margin-bottom: 15px;
    }

    .modal-content label {
        margin-bottom: 5px;
        font-weight: 600;
        color: #333;
    }

    .modal-content input {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
    }
</style>

<div class="container-fluid">
    <div class="profile-card">
        <!-- Form chỉnh sửa profile -->
        <form method="post" action="@Url.Action("SaveProfile", "Profile")" enctype="multipart/form-data">
            <!-- Input ẩn cho ID của user -->
            <input type="hidden" name="ID" value="@Model.ID" />
            <div class="profile-header">
                <!-- Avatar: chọn file mới khi ở chế độ chỉnh sửa -->
                <div class="profile-avatar" id="profileAvatar" style="background-image: url('@(Model.Avatar ?? "https://via.placeholder.com/150")');"></div>
                <div class="profile-info">
                    <h2>@Model.Name</h2>
                </div>
            </div>
            <div class="profile-details">
                <div class="detail-row">
                    <div class="label">User Name:</div>
                    <div class="value">@Model.UserName</div>
                </div>
                <div class="detail-row">
                    <div class="label">Name:</div>
                    <div class="value">
                        <input type="text" id="nameInput" name="Name" value="@Model.Name" disabled />
                    </div>
                </div>
                <div class="detail-row">
                    <div class="label">Password:</div>
                    <div class="value">
                        ********
                        <button type="button" id="changePasswordBtn" class="btn-change-password">Đổi mật khẩu</button>
                    </div>
                </div>
                <div class="detail-row">
                    <div class="label">Email:</div>
                    <div class="value">
                        <input type="email" id="emailInput" name="Email" value="@Model.Email" disabled />
                    </div>
                </div>
                <div class="detail-row">
                    <div class="label">Status:</div>
                    <div class="value">
                        <!-- Checkbox được hiển thị trước -->
                        <input type="checkbox" id="statusCheckbox" name="Status" value="true" disabled @(Model.Status ? "checked='checked'" : "") />
                        <!-- Input ẩn gửi false nếu checkbox không được chọn -->
                        <input type="hidden" name="Status" value="false" />
                    </div>
                </div>
            </div>
            <!-- Input ẩn lưu avatar (base64) -->
            <input type="hidden" id="avatarValue" name="Avatar" value="@Model.Avatar" />
            <!-- Nút chuyển đổi chế độ -->
            <button type="button" id="editBtn" class="btn-edit">Chỉnh sửa thông tin</button>
            <input type="submit" id="saveBtn" class="btn-submit" value="Lưu thay đổi" />
            <!-- Input file ẩn để chọn ảnh mới -->
            <input type="file" id="avatarInput" style="display: none;" accept="image/*" />
        </form>
    </div>

    <!-- Modal đổi mật khẩu -->
    <div id="modalOverlay" class="modal-overlay">
        <div class="modal-content">
            <button type="button" class="modal-close" id="modalCloseBtn">&times;</button>
            <div class="detail-row">
                <label for="oldPassword">Mật khẩu cũ:</label>
                <input type="password" id="oldPassword" placeholder="Nhập mật khẩu cũ" />
            </div>
            <div class="detail-row">
                <label for="newPassword">Mật khẩu mới:</label>
                <input type="password" id="newPassword" placeholder="Nhập mật khẩu mới" />
            </div>
            <div class="detail-row">
                <label for="confirmNewPassword">Nhập lại mật khẩu mới:</label>
                <input type="password" id="confirmNewPassword" placeholder="Nhập lại mật khẩu mới" />
            </div>
            <button type="button" id="savePasswordBtn" class="btn-edit" style="background-color: #007bff;">Lưu mật khẩu</button>
        </div>
    </div>
</div>

<script>
    let isEditing = false;
    const avatar = document.getElementById("profileAvatar");
    const avatarInput = document.getElementById("avatarInput");
    const editBtn = document.getElementById("editBtn");
    const statusCheckbox = document.getElementById("statusCheckbox");
    const changePasswordBtn = document.getElementById("changePasswordBtn");
    const modalOverlay = document.getElementById("modalOverlay");
    const modalCloseBtn = document.getElementById("modalCloseBtn");
    const nameInput = document.getElementById("nameInput");
    const emailInput = document.getElementById("emailInput");
    const saveBtn = document.getElementById("saveBtn");
    const avatarValue = document.getElementById("avatarValue");

    // Khi ở chế độ chỉnh sửa, nhấn vào avatar để chọn ảnh mới
    avatar.addEventListener("click", function() {
        if (isEditing) {
            avatarInput.click();
        }
    });

    avatarInput.addEventListener("change", function() {
        if (this.files && this.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                avatar.style.backgroundImage = "url('" + e.target.result + "')";
                avatarValue.value = e.target.result;
            }
            reader.readAsDataURL(this.files[0]);
        }
    });

    // Chuyển sang chế độ chỉnh sửa
    editBtn.addEventListener("click", function() {
        isEditing = true;
        editBtn.style.display = "none";
        saveBtn.style.display = "block";
        nameInput.disabled = false;
        emailInput.disabled = false;
        statusCheckbox.disabled = false;
        changePasswordBtn.style.display = "inline-block";
        avatar.style.cursor = "pointer";
    });

    // Hiển thị modal đổi mật khẩu
    changePasswordBtn.addEventListener("click", function() {
        modalOverlay.style.display = "flex";
    });
    modalCloseBtn.addEventListener("click", function() {
        modalOverlay.style.display = "none";
    });
    modalOverlay.addEventListener("click", function(e) {
        if (e.target === modalOverlay) {
            modalOverlay.style.display = "none";
        }
    });

    // Xử lý lưu mật khẩu bằng AJAX
    document.getElementById("savePasswordBtn").addEventListener("click", function() {
        const oldPassword = document.getElementById("oldPassword").value.trim();
        const newPassword = document.getElementById("newPassword").value.trim();
        const confirmNewPassword = document.getElementById("confirmNewPassword").value.trim();

        // Client-side validation (optional)
        if(newPassword.length < 8) {
            alert("Mật khẩu mới phải có ít nhất 8 ký tự.");
            return;
        }
        if(!/\d/.test(newPassword)) {
            alert("Mật khẩu mới phải chứa ít nhất 1 số.");
            return;
        }
        if(newPassword !== confirmNewPassword) {
            alert("Nhập lại mật khẩu không khớp.");
            return;
        }

        // Sử dụng fetch để gửi AJAX request
        fetch('@Url.Action("ChangePassword", "Profile")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                oldPassword: oldPassword,
                newPassword: newPassword,
                confirmNewPassword: confirmNewPassword
            })
        })
        .then(response => response.json())
        .then(data => {
            alert(data.message);
            if(data.success) {
                // Xóa nội dung các trường mật khẩu
                document.getElementById("oldPassword").value = "";
                document.getElementById("newPassword").value = "";
                document.getElementById("confirmNewPassword").value = "";
                modalOverlay.style.display = "none";
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert("Có lỗi xảy ra, vui lòng thử lại.");
        });
    });
</script>